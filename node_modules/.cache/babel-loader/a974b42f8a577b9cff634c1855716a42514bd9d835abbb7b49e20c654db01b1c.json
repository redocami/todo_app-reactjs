{"ast":null,"code":"import { CHANNEL, DEFAULT_THEME_MODE, THEME_MODES } from '../constants';\n// Resolves the different types of theme objects in the current API\nexport default function getTheme(props) {\n  if (props && props.theme) {\n    // Theme is the global Atlaskit theme\n    if (CHANNEL in props.theme) {\n      return props.theme[CHANNEL];\n    } // User has provided alternative modes\n    else if ('mode' in props.theme && THEME_MODES.includes(props.theme.mode)) {\n      return props.theme;\n    }\n  } // If format not supported (or no theme provided), return standard theme\n\n  return {\n    mode: DEFAULT_THEME_MODE\n  };\n}","map":{"version":3,"names":["CHANNEL","DEFAULT_THEME_MODE","THEME_MODES","getTheme","props","theme","includes","mode"],"sources":["C:/Users/Asus/Dropbox/Code/reactjs/node_modules/@atlaskit/theme/dist/esm/utils/get-theme.js"],"sourcesContent":["import { CHANNEL, DEFAULT_THEME_MODE, THEME_MODES } from '../constants';\n// Resolves the different types of theme objects in the current API\nexport default function getTheme(props) {\n  if (props && props.theme) {\n    // Theme is the global Atlaskit theme\n    if (CHANNEL in props.theme) {\n      return props.theme[CHANNEL];\n    } // User has provided alternative modes\n    else if ('mode' in props.theme && THEME_MODES.includes(props.theme.mode)) {\n      return props.theme;\n    }\n  } // If format not supported (or no theme provided), return standard theme\n\n\n  return {\n    mode: DEFAULT_THEME_MODE\n  };\n}"],"mappings":"AAAA,SAASA,OAAO,EAAEC,kBAAkB,EAAEC,WAAW,QAAQ,cAAc;AACvE;AACA,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EACtC,IAAIA,KAAK,IAAIA,KAAK,CAACC,KAAK,EAAE;IACxB;IACA,IAAIL,OAAO,IAAII,KAAK,CAACC,KAAK,EAAE;MAC1B,OAAOD,KAAK,CAACC,KAAK,CAACL,OAAO,CAAC;IAC7B,CAAC,CAAC;IAAA,KACG,IAAI,MAAM,IAAII,KAAK,CAACC,KAAK,IAAIH,WAAW,CAACI,QAAQ,CAACF,KAAK,CAACC,KAAK,CAACE,IAAI,CAAC,EAAE;MACxE,OAAOH,KAAK,CAACC,KAAK;IACpB;EACF,CAAC,CAAC;;EAGF,OAAO;IACLE,IAAI,EAAEN;EACR,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}