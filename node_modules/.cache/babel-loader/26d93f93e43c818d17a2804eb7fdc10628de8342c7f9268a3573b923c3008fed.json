{"ast":null,"code":"import warnOnce from './warn-once';\n/**\n * Will print an API deprecation warning message in the console once per session.\n *\n * @param packageName       The package of the API being deprecated, eg `@atlaskit/button`\n * @param api               The API being deprecated - a component, API, prop\n * @param additionalMessage Additional guidance / next steps if applicable\n *\n * @example\n *\n * ```js\n * deprecationWarning('@atlaskit/button', 'className prop', 'This API will stop working in the next major version.')\n * ```\n */\n\nexport default function deprecationWarning(packageName, api, additionalMessage) {\n  warnOnce(\"[\".concat(packageName, \"]: The \").concat(api, \" is deprecated.\").concat(additionalMessage && \" \".concat(additionalMessage)));\n}\n/**\n * Logs a prop deprecation warning to console once during a session.\n *\n * @param packageName Use `process.env._PACKAGE_NAME_` instead of a static string.\n * @param propName Prop that is deprecated.\n * @param predicate If true the deprecation warning will be logged to console.\n * @param deprecationAnnouncementOnDAC Link to the public announcement on DAC.\n */\n\nexport function propDeprecationWarning(packageName, propName, predicate, deprecationAnnouncementOnDAC) {\n  if (process.env.NODE_ENV === 'development' && predicate) {\n    warnOnce(\"[\".concat(packageName, \"]: The \").concat(propName, \" prop is deprecated and will be removed, please migrate away.\\nPublic announcement: \").concat(deprecationAnnouncementOnDAC));\n  }\n}","map":{"version":3,"names":["warnOnce","deprecationWarning","packageName","api","additionalMessage","concat","propDeprecationWarning","propName","predicate","deprecationAnnouncementOnDAC","process","env","NODE_ENV"],"sources":["C:/Users/Asus/Dropbox/Code/reactjs/node_modules/@atlaskit/ds-lib/dist/esm/utils/deprecation-warning.js"],"sourcesContent":["import warnOnce from './warn-once';\n/**\n * Will print an API deprecation warning message in the console once per session.\n *\n * @param packageName       The package of the API being deprecated, eg `@atlaskit/button`\n * @param api               The API being deprecated - a component, API, prop\n * @param additionalMessage Additional guidance / next steps if applicable\n *\n * @example\n *\n * ```js\n * deprecationWarning('@atlaskit/button', 'className prop', 'This API will stop working in the next major version.')\n * ```\n */\n\nexport default function deprecationWarning(packageName, api, additionalMessage) {\n  warnOnce(\"[\".concat(packageName, \"]: The \").concat(api, \" is deprecated.\").concat(additionalMessage && \" \".concat(additionalMessage)));\n}\n/**\n * Logs a prop deprecation warning to console once during a session.\n *\n * @param packageName Use `process.env._PACKAGE_NAME_` instead of a static string.\n * @param propName Prop that is deprecated.\n * @param predicate If true the deprecation warning will be logged to console.\n * @param deprecationAnnouncementOnDAC Link to the public announcement on DAC.\n */\n\nexport function propDeprecationWarning(packageName, propName, predicate, deprecationAnnouncementOnDAC) {\n  if (process.env.NODE_ENV === 'development' && predicate) {\n    warnOnce(\"[\".concat(packageName, \"]: The \").concat(propName, \" prop is deprecated and will be removed, please migrate away.\\nPublic announcement: \").concat(deprecationAnnouncementOnDAC));\n  }\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,kBAAkB,CAACC,WAAW,EAAEC,GAAG,EAAEC,iBAAiB,EAAE;EAC9EJ,QAAQ,CAAC,GAAG,CAACK,MAAM,CAACH,WAAW,EAAE,SAAS,CAAC,CAACG,MAAM,CAACF,GAAG,EAAE,iBAAiB,CAAC,CAACE,MAAM,CAACD,iBAAiB,IAAI,GAAG,CAACC,MAAM,CAACD,iBAAiB,CAAC,CAAC,CAAC;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,sBAAsB,CAACJ,WAAW,EAAEK,QAAQ,EAAEC,SAAS,EAAEC,4BAA4B,EAAE;EACrG,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIJ,SAAS,EAAE;IACvDR,QAAQ,CAAC,GAAG,CAACK,MAAM,CAACH,WAAW,EAAE,SAAS,CAAC,CAACG,MAAM,CAACE,QAAQ,EAAE,sFAAsF,CAAC,CAACF,MAAM,CAACI,4BAA4B,CAAC,CAAC;EAC5L;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}