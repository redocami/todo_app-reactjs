{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onMouseDown\", \"onMouseUp\"];\nimport React, { useCallback, useMemo, useState } from 'react';\nimport noop from '@atlaskit/ds-lib/noop';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport ButtonBase from './shared/button-base';\nimport { getCss } from './shared/css';\nimport getIsOnlySingleIcon from './shared/get-is-only-single-icon';\nvar isFirefox = typeof navigator !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\n/**\n * __Button__\n *\n * A button triggers an event or action. They let users know what will happen next.\n *\n * - [Examples](https://atlassian.design/components/button/examples)\n * - [Code](https://atlassian.design/components/button/code)\n * - [Usage](https://atlassian.design/components/button/usage)\n */\nvar Button = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Button(_ref, ref) {\n  var _ref$onMouseDown = _ref.onMouseDown,\n    providedOnMouseDown = _ref$onMouseDown === void 0 ? noop : _ref$onMouseDown,\n    _ref$onMouseUp = _ref.onMouseUp,\n    providedOnMouseUp = _ref$onMouseUp === void 0 ? noop : _ref$onMouseUp,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useGlobalTheme = useGlobalTheme(),\n    mode = _useGlobalTheme.mode;\n  var appearance = rest.appearance || 'default';\n  var spacing = rest.spacing || 'default';\n  var shouldFitContainer = Boolean(rest.shouldFitContainer);\n  var isSelected = Boolean(rest.isSelected);\n  var isOnlySingleIcon = getIsOnlySingleIcon(rest);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isActive = _useState2[0],\n    setIsActive = _useState2[1]; // Wrap onMouseDown / onMouseUp to manually trigger active state\n  //  in Firefox\n\n  var onMouseDown = useCallback(function (event) {\n    providedOnMouseDown(event);\n    if (isFirefox) {\n      setIsActive(true);\n    }\n  }, [providedOnMouseDown, setIsActive]);\n  var onMouseUp = useCallback(function (event) {\n    providedOnMouseUp(event);\n    if (isFirefox) {\n      setIsActive(false);\n    }\n  }, [providedOnMouseUp, setIsActive]);\n  var buttonCss = useMemo(function () {\n    return getCss({\n      appearance: appearance,\n      spacing: spacing,\n      mode: mode,\n      isSelected: isSelected,\n      shouldFitContainer: shouldFitContainer,\n      isOnlySingleIcon: isOnlySingleIcon\n    });\n  }, [appearance, spacing, mode, isSelected, shouldFitContainer, isOnlySingleIcon]);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({}, rest, {\n    ref: ref,\n    buttonCss: buttonCss // Due to how click events are set, we need to set active styles\n    //  manually in Firefox and wrap onMouseDown/onMouseUp\n    ,\n\n    \"data-firefox-is-active\": isActive ? true : undefined,\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp\n  }));\n})); // Tools including enzyme rely on components having a display name\n\nButton.displayName = 'Button';\nexport default Button;","map":{"version":3,"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","useCallback","useMemo","useState","noop","useGlobalTheme","ButtonBase","getCss","getIsOnlySingleIcon","isFirefox","navigator","userAgent","toLowerCase","indexOf","Button","memo","forwardRef","_ref","ref","_ref$onMouseDown","onMouseDown","providedOnMouseDown","_ref$onMouseUp","onMouseUp","providedOnMouseUp","rest","_useGlobalTheme","mode","appearance","spacing","shouldFitContainer","Boolean","isSelected","isOnlySingleIcon","_useState","_useState2","isActive","setIsActive","event","buttonCss","createElement","undefined","displayName"],"sources":["C:/Users/Asus/Dropbox/Code/reactjs/node_modules/@atlaskit/button/dist/esm/button.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onMouseDown\", \"onMouseUp\"];\nimport React, { useCallback, useMemo, useState } from 'react';\nimport noop from '@atlaskit/ds-lib/noop';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport ButtonBase from './shared/button-base';\nimport { getCss } from './shared/css';\nimport getIsOnlySingleIcon from './shared/get-is-only-single-icon';\nvar isFirefox = typeof navigator !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\n/**\n * __Button__\n *\n * A button triggers an event or action. They let users know what will happen next.\n *\n * - [Examples](https://atlassian.design/components/button/examples)\n * - [Code](https://atlassian.design/components/button/code)\n * - [Usage](https://atlassian.design/components/button/usage)\n */\nvar Button = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Button(_ref, ref) {\n  var _ref$onMouseDown = _ref.onMouseDown,\n      providedOnMouseDown = _ref$onMouseDown === void 0 ? noop : _ref$onMouseDown,\n      _ref$onMouseUp = _ref.onMouseUp,\n      providedOnMouseUp = _ref$onMouseUp === void 0 ? noop : _ref$onMouseUp,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useGlobalTheme = useGlobalTheme(),\n      mode = _useGlobalTheme.mode;\n\n  var appearance = rest.appearance || 'default';\n  var spacing = rest.spacing || 'default';\n  var shouldFitContainer = Boolean(rest.shouldFitContainer);\n  var isSelected = Boolean(rest.isSelected);\n  var isOnlySingleIcon = getIsOnlySingleIcon(rest);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1]; // Wrap onMouseDown / onMouseUp to manually trigger active state\n  //  in Firefox\n\n\n  var onMouseDown = useCallback(function (event) {\n    providedOnMouseDown(event);\n\n    if (isFirefox) {\n      setIsActive(true);\n    }\n  }, [providedOnMouseDown, setIsActive]);\n  var onMouseUp = useCallback(function (event) {\n    providedOnMouseUp(event);\n\n    if (isFirefox) {\n      setIsActive(false);\n    }\n  }, [providedOnMouseUp, setIsActive]);\n  var buttonCss = useMemo(function () {\n    return getCss({\n      appearance: appearance,\n      spacing: spacing,\n      mode: mode,\n      isSelected: isSelected,\n      shouldFitContainer: shouldFitContainer,\n      isOnlySingleIcon: isOnlySingleIcon\n    });\n  }, [appearance, spacing, mode, isSelected, shouldFitContainer, isOnlySingleIcon]);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({}, rest, {\n    ref: ref,\n    buttonCss: buttonCss // Due to how click events are set, we need to set active styles\n    //  manually in Firefox and wrap onMouseDown/onMouseUp\n    ,\n    \"data-firefox-is-active\": isActive ? true : undefined,\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp\n  }));\n})); // Tools including enzyme rely on components having a display name\n\nButton.displayName = 'Button';\nexport default Button;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}