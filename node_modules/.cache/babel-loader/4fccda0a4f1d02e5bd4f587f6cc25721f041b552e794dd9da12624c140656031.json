{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"buttonCss\", \"spacing\", \"autoFocus\", \"isDisabled\", \"shouldFitContainer\", \"isSelected\", \"iconBefore\", \"iconAfter\", \"children\", \"className\", \"href\", \"overlay\", \"tabIndex\", \"type\", \"onMouseDown\", \"onClick\", \"component\", \"testId\", \"analyticsContext\"];\n\n/** @jsx jsx */\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { usePlatformLeafEventHandler } from '@atlaskit/analytics-next';\nimport noop from '@atlaskit/ds-lib/noop';\nimport useAutoFocus from '@atlaskit/ds-lib/use-auto-focus';\nimport { N500 } from '@atlaskit/theme/colors';\nimport blockEvents from './block-events';\nimport { getContentStyle, getFadingCss, getIconStyle, overlayCss } from './css'; // Disabled buttons will still publish events for nested elements in webkit.\n// We are disabling pointer events on child elements so that\n// the button will always be the target of events\n// Note: firefox does not have this behaviour for child elements\n\nvar noPointerEventsOnChildrenCss = {\n  '> *': {\n    pointerEvents: 'none'\n  }\n};\nexport default /*#__PURE__*/React.forwardRef(function ButtonBase(props, ref) {\n  var _props$appearance = props.appearance,\n    appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n    buttonCss = props.buttonCss,\n    _props$spacing = props.spacing,\n    spacing = _props$spacing === void 0 ? 'default' : _props$spacing,\n    _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    _props$isDisabled = props.isDisabled,\n    isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n    _props$shouldFitConta = props.shouldFitContainer,\n    shouldFitContainer = _props$shouldFitConta === void 0 ? false : _props$shouldFitConta,\n    _props$isSelected = props.isSelected,\n    isSelected = _props$isSelected === void 0 ? false : _props$isSelected,\n    iconBefore = props.iconBefore,\n    iconAfter = props.iconAfter,\n    children = props.children,\n    className = props.className,\n    href = props.href,\n    overlay = props.overlay,\n    _props$tabIndex = props.tabIndex,\n    tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n    _props$type = props.type,\n    type = _props$type === void 0 ? !href ? 'button' : undefined : _props$type,\n    _props$onMouseDown = props.onMouseDown,\n    providedOnMouseDown = _props$onMouseDown === void 0 ? noop : _props$onMouseDown,\n    _props$onClick = props.onClick,\n    providedOnClick = _props$onClick === void 0 ? noop : _props$onClick,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? href ? 'a' : 'button' : _props$component,\n    testId = props.testId,\n    analyticsContext = props.analyticsContext,\n    rest = _objectWithoutProperties(props, _excluded);\n  var ourRef = useRef();\n  var setRef = useCallback(function (node) {\n    ourRef.current = node;\n    if (ref == null) {\n      return;\n    }\n    if (typeof ref === 'function') {\n      ref(node);\n      return;\n    } // @ts-ignore\n\n    ref.current = node;\n  }, [ourRef, ref]); // Cross browser auto focusing is pretty broken, so we are doing it ourselves\n\n  useAutoFocus(ourRef, autoFocus);\n  var onClick = usePlatformLeafEventHandler({\n    fn: providedOnClick,\n    action: 'clicked',\n    componentName: 'button',\n    packageName: \"@atlaskit/button\",\n    packageVersion: \"16.4.0\",\n    analyticsData: analyticsContext\n  }); // Button currently calls preventDefault, which is not standard button behaviour\n\n  var onMouseDown = useCallback(function (event) {\n    event.preventDefault();\n    providedOnMouseDown(event);\n  }, [providedOnMouseDown]); // Lose focus when becoming disabled (standard button behaviour)\n\n  useEffect(function () {\n    var el = ourRef.current;\n    if (isDisabled && el && el === document.activeElement) {\n      el.blur();\n    }\n  }, [isDisabled]); // we are 'disabling' input with a button when there is an overlay\n\n  var hasOverlay = Boolean(overlay);\n  var fadeCss = css(getFadingCss({\n    hasOverlay: hasOverlay\n  }));\n  var isInteractive = !isDisabled && !hasOverlay;\n  /**\n   * HACK: Spinner needs to have different colours in the \"new\" tokens design compared to the old design.\n   * For now, while we support both, these styles reach into Spinner when a theme is set, applies the right color.\n   * Ticket to remove: https://product-fabric.atlassian.net/browse/DSP-2067\n   */\n\n  var spinnerHackCss = {};\n  if (isSelected || isDisabled || appearance === 'warning') {\n    spinnerHackCss = {\n      '[data-theme] & svg': {\n        stroke: isSelected || isDisabled ? \"var(--ds-text-subtle, \".concat(N500, \")\") : \"var(--ds-text-warning-inverse, \".concat(N500, \")\")\n      }\n    };\n  }\n  return jsx(Component, _extends({}, rest, {\n    css: [buttonCss, isInteractive ? null : noPointerEventsOnChildrenCss],\n    className: className,\n    ref: setRef,\n    onClick: onClick,\n    onMouseDown: onMouseDown,\n    disabled: isDisabled,\n    href: isInteractive ? href : undefined // using undefined so that the property doesn't exist when false\n    ,\n\n    \"data-has-overlay\": hasOverlay ? true : undefined,\n    \"data-testid\": testId,\n    type: type // Adding a tab index so element is always focusable, even when not a <button> or <a>\n    // Disabling focus via keyboard navigation when disabled\n    // as this is standard button behaviour\n    ,\n\n    tabIndex: isDisabled ? -1 : tabIndex\n  }, blockEvents({\n    isInteractive: isInteractive\n  })), iconBefore ? jsx(\"span\", {\n    css: [fadeCss, getIconStyle({\n      spacing: spacing\n    })]\n  }, iconBefore) : null, children ? jsx(\"span\", {\n    css: [fadeCss, getContentStyle({\n      spacing: spacing\n    })]\n  }, children) : null, iconAfter ? jsx(\"span\", {\n    css: [fadeCss, getIconStyle({\n      spacing: spacing\n    })]\n  }, iconAfter) : null, overlay ? jsx(\"span\", {\n    css: [overlayCss, spinnerHackCss]\n  }, overlay) : null);\n});","map":{"version":3,"names":["_extends","_objectWithoutProperties","_excluded","React","useCallback","useEffect","useRef","css","jsx","usePlatformLeafEventHandler","noop","useAutoFocus","N500","blockEvents","getContentStyle","getFadingCss","getIconStyle","overlayCss","noPointerEventsOnChildrenCss","pointerEvents","forwardRef","ButtonBase","props","ref","_props$appearance","appearance","buttonCss","_props$spacing","spacing","_props$autoFocus","autoFocus","_props$isDisabled","isDisabled","_props$shouldFitConta","shouldFitContainer","_props$isSelected","isSelected","iconBefore","iconAfter","children","className","href","overlay","_props$tabIndex","tabIndex","_props$type","type","undefined","_props$onMouseDown","onMouseDown","providedOnMouseDown","_props$onClick","onClick","providedOnClick","_props$component","component","Component","testId","analyticsContext","rest","ourRef","setRef","node","current","fn","action","componentName","packageName","packageVersion","analyticsData","event","preventDefault","el","document","activeElement","blur","hasOverlay","Boolean","fadeCss","isInteractive","spinnerHackCss","stroke","concat","disabled"],"sources":["C:/Users/Asus/Dropbox/Code/reactjs/node_modules/@atlaskit/button/dist/esm/shared/button-base.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"buttonCss\", \"spacing\", \"autoFocus\", \"isDisabled\", \"shouldFitContainer\", \"isSelected\", \"iconBefore\", \"iconAfter\", \"children\", \"className\", \"href\", \"overlay\", \"tabIndex\", \"type\", \"onMouseDown\", \"onClick\", \"component\", \"testId\", \"analyticsContext\"];\n\n/** @jsx jsx */\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { usePlatformLeafEventHandler } from '@atlaskit/analytics-next';\nimport noop from '@atlaskit/ds-lib/noop';\nimport useAutoFocus from '@atlaskit/ds-lib/use-auto-focus';\nimport { N500 } from '@atlaskit/theme/colors';\nimport blockEvents from './block-events';\nimport { getContentStyle, getFadingCss, getIconStyle, overlayCss } from './css'; // Disabled buttons will still publish events for nested elements in webkit.\n// We are disabling pointer events on child elements so that\n// the button will always be the target of events\n// Note: firefox does not have this behaviour for child elements\n\nvar noPointerEventsOnChildrenCss = {\n  '> *': {\n    pointerEvents: 'none'\n  }\n};\nexport default /*#__PURE__*/React.forwardRef(function ButtonBase(props, ref) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      buttonCss = props.buttonCss,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 'default' : _props$spacing,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$isDisabled = props.isDisabled,\n      isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n      _props$shouldFitConta = props.shouldFitContainer,\n      shouldFitContainer = _props$shouldFitConta === void 0 ? false : _props$shouldFitConta,\n      _props$isSelected = props.isSelected,\n      isSelected = _props$isSelected === void 0 ? false : _props$isSelected,\n      iconBefore = props.iconBefore,\n      iconAfter = props.iconAfter,\n      children = props.children,\n      className = props.className,\n      href = props.href,\n      overlay = props.overlay,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      _props$type = props.type,\n      type = _props$type === void 0 ? !href ? 'button' : undefined : _props$type,\n      _props$onMouseDown = props.onMouseDown,\n      providedOnMouseDown = _props$onMouseDown === void 0 ? noop : _props$onMouseDown,\n      _props$onClick = props.onClick,\n      providedOnClick = _props$onClick === void 0 ? noop : _props$onClick,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? href ? 'a' : 'button' : _props$component,\n      testId = props.testId,\n      analyticsContext = props.analyticsContext,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var ourRef = useRef();\n  var setRef = useCallback(function (node) {\n    ourRef.current = node;\n\n    if (ref == null) {\n      return;\n    }\n\n    if (typeof ref === 'function') {\n      ref(node);\n      return;\n    } // @ts-ignore\n\n\n    ref.current = node;\n  }, [ourRef, ref]); // Cross browser auto focusing is pretty broken, so we are doing it ourselves\n\n  useAutoFocus(ourRef, autoFocus);\n  var onClick = usePlatformLeafEventHandler({\n    fn: providedOnClick,\n    action: 'clicked',\n    componentName: 'button',\n    packageName: \"@atlaskit/button\",\n    packageVersion: \"16.4.0\",\n    analyticsData: analyticsContext\n  }); // Button currently calls preventDefault, which is not standard button behaviour\n\n  var onMouseDown = useCallback(function (event) {\n    event.preventDefault();\n    providedOnMouseDown(event);\n  }, [providedOnMouseDown]); // Lose focus when becoming disabled (standard button behaviour)\n\n  useEffect(function () {\n    var el = ourRef.current;\n\n    if (isDisabled && el && el === document.activeElement) {\n      el.blur();\n    }\n  }, [isDisabled]); // we are 'disabling' input with a button when there is an overlay\n\n  var hasOverlay = Boolean(overlay);\n  var fadeCss = css(getFadingCss({\n    hasOverlay: hasOverlay\n  }));\n  var isInteractive = !isDisabled && !hasOverlay;\n  /**\n   * HACK: Spinner needs to have different colours in the \"new\" tokens design compared to the old design.\n   * For now, while we support both, these styles reach into Spinner when a theme is set, applies the right color.\n   * Ticket to remove: https://product-fabric.atlassian.net/browse/DSP-2067\n   */\n\n  var spinnerHackCss = {};\n\n  if (isSelected || isDisabled || appearance === 'warning') {\n    spinnerHackCss = {\n      '[data-theme] & svg': {\n        stroke: isSelected || isDisabled ? \"var(--ds-text-subtle, \".concat(N500, \")\") : \"var(--ds-text-warning-inverse, \".concat(N500, \")\")\n      }\n    };\n  }\n\n  return jsx(Component, _extends({}, rest, {\n    css: [buttonCss, isInteractive ? null : noPointerEventsOnChildrenCss],\n    className: className,\n    ref: setRef,\n    onClick: onClick,\n    onMouseDown: onMouseDown,\n    disabled: isDisabled,\n    href: isInteractive ? href : undefined // using undefined so that the property doesn't exist when false\n    ,\n    \"data-has-overlay\": hasOverlay ? true : undefined,\n    \"data-testid\": testId,\n    type: type // Adding a tab index so element is always focusable, even when not a <button> or <a>\n    // Disabling focus via keyboard navigation when disabled\n    // as this is standard button behaviour\n    ,\n    tabIndex: isDisabled ? -1 : tabIndex\n  }, blockEvents({\n    isInteractive: isInteractive\n  })), iconBefore ? jsx(\"span\", {\n    css: [fadeCss, getIconStyle({\n      spacing: spacing\n    })]\n  }, iconBefore) : null, children ? jsx(\"span\", {\n    css: [fadeCss, getContentStyle({\n      spacing: spacing\n    })]\n  }, children) : null, iconAfter ? jsx(\"span\", {\n    css: [fadeCss, getIconStyle({\n      spacing: spacing\n    })]\n  }, iconAfter) : null, overlay ? jsx(\"span\", {\n    css: [overlayCss, spinnerHackCss]\n  }, overlay) : null);\n});"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,wBAAwB,MAAM,gDAAgD;AACrF,IAAIC,SAAS,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,oBAAoB,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,kBAAkB,CAAC;;AAErR;AACA,OAAOC,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC7D,SAASC,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AACzC,SAASC,2BAA2B,QAAQ,0BAA0B;AACtE,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,SAASC,IAAI,QAAQ,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,eAAe,EAAEC,YAAY,EAAEC,YAAY,EAAEC,UAAU,QAAQ,OAAO,CAAC,CAAC;AACjF;AACA;AACA;;AAEA,IAAIC,4BAA4B,GAAG;EACjC,KAAK,EAAE;IACLC,aAAa,EAAE;EACjB;AACF,CAAC;AACD,eAAe,aAAahB,KAAK,CAACiB,UAAU,CAAC,SAASC,UAAU,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC3E,IAAIC,iBAAiB,GAAGF,KAAK,CAACG,UAAU;IACpCA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,iBAAiB;IACzEE,SAAS,GAAGJ,KAAK,CAACI,SAAS;IAC3BC,cAAc,GAAGL,KAAK,CAACM,OAAO;IAC9BA,OAAO,GAAGD,cAAc,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,cAAc;IAChEE,gBAAgB,GAAGP,KAAK,CAACQ,SAAS;IAClCA,SAAS,GAAGD,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,gBAAgB;IAClEE,iBAAiB,GAAGT,KAAK,CAACU,UAAU;IACpCA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,iBAAiB;IACrEE,qBAAqB,GAAGX,KAAK,CAACY,kBAAkB;IAChDA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,qBAAqB;IACrFE,iBAAiB,GAAGb,KAAK,CAACc,UAAU;IACpCA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,iBAAiB;IACrEE,UAAU,GAAGf,KAAK,CAACe,UAAU;IAC7BC,SAAS,GAAGhB,KAAK,CAACgB,SAAS;IAC3BC,QAAQ,GAAGjB,KAAK,CAACiB,QAAQ;IACzBC,SAAS,GAAGlB,KAAK,CAACkB,SAAS;IAC3BC,IAAI,GAAGnB,KAAK,CAACmB,IAAI;IACjBC,OAAO,GAAGpB,KAAK,CAACoB,OAAO;IACvBC,eAAe,GAAGrB,KAAK,CAACsB,QAAQ;IAChCA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,eAAe;IAC3DE,WAAW,GAAGvB,KAAK,CAACwB,IAAI;IACxBA,IAAI,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAG,CAACJ,IAAI,GAAG,QAAQ,GAAGM,SAAS,GAAGF,WAAW;IAC1EG,kBAAkB,GAAG1B,KAAK,CAAC2B,WAAW;IACtCC,mBAAmB,GAAGF,kBAAkB,KAAK,KAAK,CAAC,GAAGtC,IAAI,GAAGsC,kBAAkB;IAC/EG,cAAc,GAAG7B,KAAK,CAAC8B,OAAO;IAC9BC,eAAe,GAAGF,cAAc,KAAK,KAAK,CAAC,GAAGzC,IAAI,GAAGyC,cAAc;IACnEG,gBAAgB,GAAGhC,KAAK,CAACiC,SAAS;IAClCC,SAAS,GAAGF,gBAAgB,KAAK,KAAK,CAAC,GAAGb,IAAI,GAAG,GAAG,GAAG,QAAQ,GAAGa,gBAAgB;IAClFG,MAAM,GAAGnC,KAAK,CAACmC,MAAM;IACrBC,gBAAgB,GAAGpC,KAAK,CAACoC,gBAAgB;IACzCC,IAAI,GAAG1D,wBAAwB,CAACqB,KAAK,EAAEpB,SAAS,CAAC;EAErD,IAAI0D,MAAM,GAAGtD,MAAM,EAAE;EACrB,IAAIuD,MAAM,GAAGzD,WAAW,CAAC,UAAU0D,IAAI,EAAE;IACvCF,MAAM,CAACG,OAAO,GAAGD,IAAI;IAErB,IAAIvC,GAAG,IAAI,IAAI,EAAE;MACf;IACF;IAEA,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;MAC7BA,GAAG,CAACuC,IAAI,CAAC;MACT;IACF,CAAC,CAAC;;IAGFvC,GAAG,CAACwC,OAAO,GAAGD,IAAI;EACpB,CAAC,EAAE,CAACF,MAAM,EAAErC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEnBZ,YAAY,CAACiD,MAAM,EAAE9B,SAAS,CAAC;EAC/B,IAAIsB,OAAO,GAAG3C,2BAA2B,CAAC;IACxCuD,EAAE,EAAEX,eAAe;IACnBY,MAAM,EAAE,SAAS;IACjBC,aAAa,EAAE,QAAQ;IACvBC,WAAW,EAAE,kBAAkB;IAC/BC,cAAc,EAAE,QAAQ;IACxBC,aAAa,EAAEX;EACjB,CAAC,CAAC,CAAC,CAAC;;EAEJ,IAAIT,WAAW,GAAG7C,WAAW,CAAC,UAAUkE,KAAK,EAAE;IAC7CA,KAAK,CAACC,cAAc,EAAE;IACtBrB,mBAAmB,CAACoB,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACpB,mBAAmB,CAAC,CAAC,CAAC,CAAC;;EAE3B7C,SAAS,CAAC,YAAY;IACpB,IAAImE,EAAE,GAAGZ,MAAM,CAACG,OAAO;IAEvB,IAAI/B,UAAU,IAAIwC,EAAE,IAAIA,EAAE,KAAKC,QAAQ,CAACC,aAAa,EAAE;MACrDF,EAAE,CAACG,IAAI,EAAE;IACX;EACF,CAAC,EAAE,CAAC3C,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,IAAI4C,UAAU,GAAGC,OAAO,CAACnC,OAAO,CAAC;EACjC,IAAIoC,OAAO,GAAGvE,GAAG,CAACQ,YAAY,CAAC;IAC7B6D,UAAU,EAAEA;EACd,CAAC,CAAC,CAAC;EACH,IAAIG,aAAa,GAAG,CAAC/C,UAAU,IAAI,CAAC4C,UAAU;EAC9C;AACF;AACA;AACA;AACA;;EAEE,IAAII,cAAc,GAAG,CAAC,CAAC;EAEvB,IAAI5C,UAAU,IAAIJ,UAAU,IAAIP,UAAU,KAAK,SAAS,EAAE;IACxDuD,cAAc,GAAG;MACf,oBAAoB,EAAE;QACpBC,MAAM,EAAE7C,UAAU,IAAIJ,UAAU,GAAG,wBAAwB,CAACkD,MAAM,CAACtE,IAAI,EAAE,GAAG,CAAC,GAAG,iCAAiC,CAACsE,MAAM,CAACtE,IAAI,EAAE,GAAG;MACpI;IACF,CAAC;EACH;EAEA,OAAOJ,GAAG,CAACgD,SAAS,EAAExD,QAAQ,CAAC,CAAC,CAAC,EAAE2D,IAAI,EAAE;IACvCpD,GAAG,EAAE,CAACmB,SAAS,EAAEqD,aAAa,GAAG,IAAI,GAAG7D,4BAA4B,CAAC;IACrEsB,SAAS,EAAEA,SAAS;IACpBjB,GAAG,EAAEsC,MAAM;IACXT,OAAO,EAAEA,OAAO;IAChBH,WAAW,EAAEA,WAAW;IACxBkC,QAAQ,EAAEnD,UAAU;IACpBS,IAAI,EAAEsC,aAAa,GAAGtC,IAAI,GAAGM,SAAS,CAAC;IAAA;;IAEvC,kBAAkB,EAAE6B,UAAU,GAAG,IAAI,GAAG7B,SAAS;IACjD,aAAa,EAAEU,MAAM;IACrBX,IAAI,EAAEA,IAAI,CAAC;IACX;IACA;IAAA;;IAEAF,QAAQ,EAAEZ,UAAU,GAAG,CAAC,CAAC,GAAGY;EAC9B,CAAC,EAAE/B,WAAW,CAAC;IACbkE,aAAa,EAAEA;EACjB,CAAC,CAAC,CAAC,EAAE1C,UAAU,GAAG7B,GAAG,CAAC,MAAM,EAAE;IAC5BD,GAAG,EAAE,CAACuE,OAAO,EAAE9D,YAAY,CAAC;MAC1BY,OAAO,EAAEA;IACX,CAAC,CAAC;EACJ,CAAC,EAAES,UAAU,CAAC,GAAG,IAAI,EAAEE,QAAQ,GAAG/B,GAAG,CAAC,MAAM,EAAE;IAC5CD,GAAG,EAAE,CAACuE,OAAO,EAAEhE,eAAe,CAAC;MAC7Bc,OAAO,EAAEA;IACX,CAAC,CAAC;EACJ,CAAC,EAAEW,QAAQ,CAAC,GAAG,IAAI,EAAED,SAAS,GAAG9B,GAAG,CAAC,MAAM,EAAE;IAC3CD,GAAG,EAAE,CAACuE,OAAO,EAAE9D,YAAY,CAAC;MAC1BY,OAAO,EAAEA;IACX,CAAC,CAAC;EACJ,CAAC,EAAEU,SAAS,CAAC,GAAG,IAAI,EAAEI,OAAO,GAAGlC,GAAG,CAAC,MAAM,EAAE;IAC1CD,GAAG,EAAE,CAACU,UAAU,EAAE+D,cAAc;EAClC,CAAC,EAAEtC,OAAO,CAAC,GAAG,IAAI,CAAC;AACrB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}