{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Dropbox\\\\Code\\\\reactjs\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport TodoList from \"./components/TodoList\";\nimport Textfield from \"@atlaskit/textfield\";\nimport Button from \"@atlaskit/button\";\nimport { useState } from \"react\";\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [textInput, setTextInput] = useState(\"\");\n  const onTextInputChange = e => {\n    setTextInput(e.target.value);\n  };\n  const onAddBtnClick = e => {\n    setTodoList([...todoList, {\n      id: v4(),\n      name: textInput,\n      isCompleted: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Things need to be done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Textfield, {\n      name: \"add-todo\",\n      placeholder: \"Input...\",\n      elemAfterInput: /*#__PURE__*/_jsxDEV(Button, {\n        isDisabled: !textInput,\n        appearance: \"primary\",\n        onClick: onAddBtnClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this),\n      css: {\n        padding: \"2px 4px 2px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"6UP2wQHD4q6KP2n3Xt3oiRp4Qxw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoList","Textfield","Button","useState","v4","App","todoList","setTodoList","textInput","setTextInput","onTextInputChange","e","target","value","onAddBtnClick","id","name","isCompleted","padding"],"sources":["C:/Users/Asus/Dropbox/Code/reactjs/src/App.js"],"sourcesContent":["import TodoList from \"./components/TodoList\";\nimport Textfield from \"@atlaskit/textfield\";\nimport Button from \"@atlaskit/button\";\nimport { useState } from \"react\";\nimport { v4 } from 'uuid';\n\nfunction App() {\n  const [todoList, setTodoList] = useState ([]);\n  const [textInput, setTextInput] = useState (\"\");\n\n  const onTextInputChange = (e) => {\n    setTextInput(e.target.value);\n  };\n\n  const onAddBtnClick = (e) => {\n    setTodoList([...todoList, {id: v4(), name: textInput, isCompleted: false }])\n  };\n\n\n  return (\n    <>\n    <h3>Things need to be done</h3>\n    <Textfield \n      name=\"add-todo\"\n      placeholder=\"Input...\" \n      elemAfterInput={\n        <Button \n          isDisabled={!textInput}\n          appearance={\"primary\"}\n          onClick={onAddBtnClick}>\n            Add\n        </Button>\n    }\n    css ={{ padding: \"2px 4px 2px\"}}\n    ></Textfield>\n    <TodoList />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,EAAE,QAAQ,MAAM;AAAC;AAAA;AAE1B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAE,EAAE,CAAC;EAC7C,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAE,EAAE,CAAC;EAE/C,MAAMO,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,aAAa,GAAIH,CAAC,IAAK;IAC3BJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAACS,EAAE,EAAEX,EAAE,EAAE;MAAEY,IAAI,EAAER,SAAS;MAAES,WAAW,EAAE;IAAM,CAAC,CAAC,CAAC;EAC9E,CAAC;EAGD,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B,eAC/B,QAAC,SAAS;MACR,IAAI,EAAC,UAAU;MACf,WAAW,EAAC,UAAU;MACtB,cAAc,eACZ,QAAC,MAAM;QACL,UAAU,EAAE,CAACT,SAAU;QACvB,UAAU,EAAE,SAAU;QACtB,OAAO,EAAEM,aAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG5B;MACD,GAAG,EAAG;QAAEI,OAAO,EAAE;MAAa;IAAE;MAAA;MAAA;MAAA;IAAA,QACnB,eACb,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEP;AAAC,GAhCQb,GAAG;AAAA,KAAHA,GAAG;AAkCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}