{"ast":null,"code":"/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx, keyframes } from '@emotion/react';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\n\n/**\n * Returns the appropriate circle stroke color.\n */\nfunction getStrokeColor(_ref) {\n  var mode = _ref.mode,\n    appearance = _ref.appearance;\n  if (mode === 'light') {\n    return appearance === 'inherit' ? \"var(--ds-text-subtle, \".concat(N500, \")\") : \"var(--ds-text-inverse, \".concat(N0, \")\");\n  }\n  return appearance === 'inherit' ? \"var(--ds-text-subtle, \".concat(DN900, \")\") : \"var(--ds-text-inverse, \".concat(DN500, \")\");\n}\nvar rotate = keyframes({\n  to: {\n    transform: 'rotate(360deg)'\n  }\n});\nvar rotateStyles = css({\n  animation: \"\".concat(rotate, \" 0.86s infinite\"),\n  animationTimingFunction: 'cubic-bezier(0.4, 0.15, 0.6, 0.85)',\n  transformOrigin: 'center'\n});\n/**\n * There are three parts to the load in animation:\n * 1. Fade in\n * 2. Accelerated spin\n * 3. Stretch the spinner line\n */\n\nvar loadIn = keyframes({\n  from: {\n    transform: 'rotate(50deg)',\n    opacity: 0,\n    strokeDashoffset: 60\n  },\n  to: {\n    transform: 'rotate(230deg)',\n    opacity: 1,\n    strokeDashoffset: 50\n  }\n});\nvar loadInStyles = css({\n  animation: \"\".concat(loadIn, \" 1s ease-in-out\"),\n  /**\n   * When the animation completes, stay at the last frame of the animation.\n   */\n  animationFillMode: 'forwards',\n  /**\n   * We are going to animate this in.\n   */\n  opacity: 0\n});\nvar wrapperStyles = css({\n  display: 'inline-flex',\n  /**\n   * Align better inline with text.\n   */\n  verticalAlign: 'middle'\n});\nvar circleStyles = css({\n  fill: 'none',\n  strokeDasharray: 60,\n  strokeDashoffset: 'inherit',\n  strokeLinecap: 'round',\n  strokeWidth: 1.5,\n  '@media screen and (forced-colors: active)': {\n    filter: 'grayscale(100%)',\n    stroke: 'CanvasText'\n  }\n});\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Spinner(_ref2, ref) {\n  var testId = _ref2.testId,\n    _ref2$appearance = _ref2.appearance,\n    appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,\n    _ref2$delay = _ref2.delay,\n    delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n    _ref2$size = _ref2.size,\n    providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  var animationDelay = \"\".concat(delay, \"ms\");\n  var _useGlobalTheme = useGlobalTheme(),\n    mode = _useGlobalTheme.mode;\n  var stroke = getStrokeColor({\n    mode: mode,\n    appearance: appearance\n  });\n  /**\n   * The Spinner animation uses a combination of two\n   * css animations on two separate elements.\n   */\n\n  return jsx(\"span\", {\n    /**\n     * This span exists to off-load animations from the circle element,\n     * which were causing performance issues (style recalculations)\n     * on Safari and older versions of Chrome.\n     *\n     * This can be removed and styles placed back on the circle element once\n     * Safari fixes this bug and off-loads rendering to the GPU from the CPU.\n     */\n    css: [wrapperStyles, rotateStyles],\n    \"data-testid\": testId && \"\".concat(testId, \"-wrapper\"),\n    style: {\n      animationDelay: animationDelay,\n      width: size,\n      height: size\n    }\n  }, jsx(\"svg\", {\n    height: size,\n    width: size,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-testid\": testId,\n    ref: ref,\n    css: loadInStyles,\n    style: {\n      animationDelay: animationDelay\n    }\n  }, jsx(\"circle\", {\n    cx: \"8\",\n    cy: \"8\",\n    r: \"7\",\n    css: circleStyles,\n    style: {\n      stroke: stroke\n    }\n  })));\n}));","map":{"version":3,"names":["React","css","jsx","keyframes","DN500","DN900","N0","N500","useGlobalTheme","presetSizes","getStrokeColor","_ref","mode","appearance","concat","rotate","to","transform","rotateStyles","animation","animationTimingFunction","transformOrigin","loadIn","from","opacity","strokeDashoffset","loadInStyles","animationFillMode","wrapperStyles","display","verticalAlign","circleStyles","fill","strokeDasharray","strokeLinecap","strokeWidth","filter","stroke","memo","forwardRef","Spinner","_ref2","ref","testId","_ref2$appearance","_ref2$delay","delay","_ref2$size","size","providedSize","animationDelay","_useGlobalTheme","style","width","height","viewBox","xmlns","cx","cy","r"],"sources":["C:/Users/Asus/Dropbox/Code/reactjs/node_modules/@atlaskit/spinner/dist/esm/spinner.js"],"sourcesContent":["/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx, keyframes } from '@emotion/react';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\n\n/**\n * Returns the appropriate circle stroke color.\n */\nfunction getStrokeColor(_ref) {\n  var mode = _ref.mode,\n      appearance = _ref.appearance;\n\n  if (mode === 'light') {\n    return appearance === 'inherit' ? \"var(--ds-text-subtle, \".concat(N500, \")\") : \"var(--ds-text-inverse, \".concat(N0, \")\");\n  }\n\n  return appearance === 'inherit' ? \"var(--ds-text-subtle, \".concat(DN900, \")\") : \"var(--ds-text-inverse, \".concat(DN500, \")\");\n}\n\nvar rotate = keyframes({\n  to: {\n    transform: 'rotate(360deg)'\n  }\n});\nvar rotateStyles = css({\n  animation: \"\".concat(rotate, \" 0.86s infinite\"),\n  animationTimingFunction: 'cubic-bezier(0.4, 0.15, 0.6, 0.85)',\n  transformOrigin: 'center'\n});\n/**\n * There are three parts to the load in animation:\n * 1. Fade in\n * 2. Accelerated spin\n * 3. Stretch the spinner line\n */\n\nvar loadIn = keyframes({\n  from: {\n    transform: 'rotate(50deg)',\n    opacity: 0,\n    strokeDashoffset: 60\n  },\n  to: {\n    transform: 'rotate(230deg)',\n    opacity: 1,\n    strokeDashoffset: 50\n  }\n});\nvar loadInStyles = css({\n  animation: \"\".concat(loadIn, \" 1s ease-in-out\"),\n\n  /**\n   * When the animation completes, stay at the last frame of the animation.\n   */\n  animationFillMode: 'forwards',\n\n  /**\n   * We are going to animate this in.\n   */\n  opacity: 0\n});\nvar wrapperStyles = css({\n  display: 'inline-flex',\n\n  /**\n   * Align better inline with text.\n   */\n  verticalAlign: 'middle'\n});\nvar circleStyles = css({\n  fill: 'none',\n  strokeDasharray: 60,\n  strokeDashoffset: 'inherit',\n  strokeLinecap: 'round',\n  strokeWidth: 1.5,\n  '@media screen and (forced-colors: active)': {\n    filter: 'grayscale(100%)',\n    stroke: 'CanvasText'\n  }\n});\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Spinner(_ref2, ref) {\n  var testId = _ref2.testId,\n      _ref2$appearance = _ref2.appearance,\n      appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,\n      _ref2$delay = _ref2.delay,\n      delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n      _ref2$size = _ref2.size,\n      providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  var animationDelay = \"\".concat(delay, \"ms\");\n\n  var _useGlobalTheme = useGlobalTheme(),\n      mode = _useGlobalTheme.mode;\n\n  var stroke = getStrokeColor({\n    mode: mode,\n    appearance: appearance\n  });\n  /**\n   * The Spinner animation uses a combination of two\n   * css animations on two separate elements.\n   */\n\n  return jsx(\"span\", {\n    /**\n     * This span exists to off-load animations from the circle element,\n     * which were causing performance issues (style recalculations)\n     * on Safari and older versions of Chrome.\n     *\n     * This can be removed and styles placed back on the circle element once\n     * Safari fixes this bug and off-loads rendering to the GPU from the CPU.\n     */\n    css: [wrapperStyles, rotateStyles],\n    \"data-testid\": testId && \"\".concat(testId, \"-wrapper\"),\n    style: {\n      animationDelay: animationDelay,\n      width: size,\n      height: size\n    }\n  }, jsx(\"svg\", {\n    height: size,\n    width: size,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-testid\": testId,\n    ref: ref,\n    css: loadInStyles,\n    style: {\n      animationDelay: animationDelay\n    }\n  }, jsx(\"circle\", {\n    cx: \"8\",\n    cy: \"8\",\n    r: \"7\",\n    css: circleStyles,\n    style: {\n      stroke: stroke\n    }\n  })));\n}));"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;AACpD,SAASC,KAAK,EAAEC,KAAK,EAAEC,EAAE,EAAEC,IAAI,QAAQ,wBAAwB;AAC/D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AACA;AACA;AACA,SAASC,cAAc,CAACC,IAAI,EAAE;EAC5B,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;IAChBC,UAAU,GAAGF,IAAI,CAACE,UAAU;EAEhC,IAAID,IAAI,KAAK,OAAO,EAAE;IACpB,OAAOC,UAAU,KAAK,SAAS,GAAG,wBAAwB,CAACC,MAAM,CAACP,IAAI,EAAE,GAAG,CAAC,GAAG,yBAAyB,CAACO,MAAM,CAACR,EAAE,EAAE,GAAG,CAAC;EAC1H;EAEA,OAAOO,UAAU,KAAK,SAAS,GAAG,wBAAwB,CAACC,MAAM,CAACT,KAAK,EAAE,GAAG,CAAC,GAAG,yBAAyB,CAACS,MAAM,CAACV,KAAK,EAAE,GAAG,CAAC;AAC9H;AAEA,IAAIW,MAAM,GAAGZ,SAAS,CAAC;EACrBa,EAAE,EAAE;IACFC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AACF,IAAIC,YAAY,GAAGjB,GAAG,CAAC;EACrBkB,SAAS,EAAE,EAAE,CAACL,MAAM,CAACC,MAAM,EAAE,iBAAiB,CAAC;EAC/CK,uBAAuB,EAAE,oCAAoC;EAC7DC,eAAe,EAAE;AACnB,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GAAGnB,SAAS,CAAC;EACrBoB,IAAI,EAAE;IACJN,SAAS,EAAE,eAAe;IAC1BO,OAAO,EAAE,CAAC;IACVC,gBAAgB,EAAE;EACpB,CAAC;EACDT,EAAE,EAAE;IACFC,SAAS,EAAE,gBAAgB;IAC3BO,OAAO,EAAE,CAAC;IACVC,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC;AACF,IAAIC,YAAY,GAAGzB,GAAG,CAAC;EACrBkB,SAAS,EAAE,EAAE,CAACL,MAAM,CAACQ,MAAM,EAAE,iBAAiB,CAAC;EAE/C;AACF;AACA;EACEK,iBAAiB,EAAE,UAAU;EAE7B;AACF;AACA;EACEH,OAAO,EAAE;AACX,CAAC,CAAC;AACF,IAAII,aAAa,GAAG3B,GAAG,CAAC;EACtB4B,OAAO,EAAE,aAAa;EAEtB;AACF;AACA;EACEC,aAAa,EAAE;AACjB,CAAC,CAAC;AACF,IAAIC,YAAY,GAAG9B,GAAG,CAAC;EACrB+B,IAAI,EAAE,MAAM;EACZC,eAAe,EAAE,EAAE;EACnBR,gBAAgB,EAAE,SAAS;EAC3BS,aAAa,EAAE,OAAO;EACtBC,WAAW,EAAE,GAAG;EAChB,2CAA2C,EAAE;IAC3CC,MAAM,EAAE,iBAAiB;IACzBC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AACF,eAAe,aAAarC,KAAK,CAACsC,IAAI,EAAE,aAAatC,KAAK,CAACuC,UAAU,CAAC,SAASC,OAAO,CAACC,KAAK,EAAEC,GAAG,EAAE;EACjG,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAM;IACrBC,gBAAgB,GAAGH,KAAK,CAAC5B,UAAU;IACnCA,UAAU,GAAG+B,gBAAgB,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,gBAAgB;IACvEC,WAAW,GAAGJ,KAAK,CAACK,KAAK;IACzBA,KAAK,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,WAAW;IAChDE,UAAU,GAAGN,KAAK,CAACO,IAAI;IACvBC,YAAY,GAAGF,UAAU,KAAK,KAAK,CAAC,GAAG,QAAQ,GAAGA,UAAU;EAChE,IAAIC,IAAI,GAAG,OAAOC,YAAY,KAAK,QAAQ,GAAGA,YAAY,GAAGxC,WAAW,CAACwC,YAAY,CAAC;EACtF,IAAIC,cAAc,GAAG,EAAE,CAACpC,MAAM,CAACgC,KAAK,EAAE,IAAI,CAAC;EAE3C,IAAIK,eAAe,GAAG3C,cAAc,EAAE;IAClCI,IAAI,GAAGuC,eAAe,CAACvC,IAAI;EAE/B,IAAIyB,MAAM,GAAG3B,cAAc,CAAC;IAC1BE,IAAI,EAAEA,IAAI;IACVC,UAAU,EAAEA;EACd,CAAC,CAAC;EACF;AACF;AACA;AACA;;EAEE,OAAOX,GAAG,CAAC,MAAM,EAAE;IACjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACID,GAAG,EAAE,CAAC2B,aAAa,EAAEV,YAAY,CAAC;IAClC,aAAa,EAAEyB,MAAM,IAAI,EAAE,CAAC7B,MAAM,CAAC6B,MAAM,EAAE,UAAU,CAAC;IACtDS,KAAK,EAAE;MACLF,cAAc,EAAEA,cAAc;MAC9BG,KAAK,EAAEL,IAAI;MACXM,MAAM,EAAEN;IACV;EACF,CAAC,EAAE9C,GAAG,CAAC,KAAK,EAAE;IACZoD,MAAM,EAAEN,IAAI;IACZK,KAAK,EAAEL,IAAI;IACXO,OAAO,EAAE,WAAW;IACpBC,KAAK,EAAE,4BAA4B;IACnC,aAAa,EAAEb,MAAM;IACrBD,GAAG,EAAEA,GAAG;IACRzC,GAAG,EAAEyB,YAAY;IACjB0B,KAAK,EAAE;MACLF,cAAc,EAAEA;IAClB;EACF,CAAC,EAAEhD,GAAG,CAAC,QAAQ,EAAE;IACfuD,EAAE,EAAE,GAAG;IACPC,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,GAAG;IACN1D,GAAG,EAAE8B,YAAY;IACjBqB,KAAK,EAAE;MACLf,MAAM,EAAEA;IACV;EACF,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}